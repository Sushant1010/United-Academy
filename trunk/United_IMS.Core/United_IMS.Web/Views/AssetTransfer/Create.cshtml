@model United_IMS.Web.ViewModel.AssetTransferVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>Create Asset Transfer</h1>
    <ol class="breadcrumb"><li class="list">@Html.ActionLink("List", "Index",null,new{@class= "btn btn-xs btn-success" })</li></ol>
</section>

<section class="content">
<div class="box box-success">
    <div class="box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Category", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.DropDownList("CategoryId", null, "-- Select --", new { @class = "form-control select2", required = "required", onchange = "GetItem()" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-2">
                    @Html.Label("Asset Item", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.DropDownList("AssetItemId", null, "-- Select --", new { @class = "form-control select2", required = "required", onchange = "GetOBL()" })
                    @Html.ValidationMessageFor(model => model.AssetId, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.OrganizationId, "Current Organization", new { @class = "control-label", @readonly = "readonly" })
                </div>
                <div class=" col-sm-3">
                    @Html.DropDownList("OrganizationId", null, " ", new { @class = "form-control select2", required = "required", disabled = "disabled" })
                </div>

                <div class="col-sm-2">
                    @Html.LabelFor(model => model.OrganizationId, "Organization", new { @class = "control-label" })
                </div>
                <div class=" col-sm-3">
                    @Html.DropDownList("OrganizationId1", null, "-- Select --", new { @class = "form-control", required = "required", onchange = "GetBranchLocation()" })
                </div>
            </div>


            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Current Branch", new { @class = "control-label", @readonly = "readonly" })
                </div>
                <div class="col-sm-3">
                    @Html.DropDownList("BranchId", null, "", new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-2">
                    @Html.Label("Branch", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.DropDownList("BranchId1", null, "-- Select --", new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Current Location", new { @class = "control-label", @readonly = "readonly" })
                </div>
                <div class="col-sm-3">
                    @Html.DropDownList("LocationId", null, "", new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-2">
                    @Html.Label("Location", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.DropDownList("LocationId1", null, "-- Select --", new { @class = "form-control", disabled= "disabled" })
                    @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.TransferDate, "Transfer Date", new { @class = "control -label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.TransferDate, "{0:yyyy-MM-dd}", new { @class = "form-control EngDate", Required ="Required" })
                    @Html.ValidationMessageFor(model => model.TransferDate, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-2">
                    @Html.LabelFor(model => model.TransferDateBS, "Transfer Date BS", new { @class = "control -label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.TransferDateBS, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransferDateBS, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group row">
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Transfer Date</span>
                        @Html.TextBox("TransferDate", "", new { @class = "form-control EngDate", required = "required" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="input-group">
                        <span class="input-group-addon">Transfer Date BS</span>
                        @Html.TextBox("TransferDateBS", "", new { @class = "form-control", required = "required" })
                    </div>
                </div>
            </div>*@

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.Remarks, new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.AssignedTo, new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.DropDownList("AssignedToId", null, "-- Select --", new { @class = "form-control" })
                    @*@Html.TextBoxFor(model => model.AssignedTo, new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.AssignedDate, "Assigned Date", new { @class = "control -label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.AssignedDate, "{0:yyyy-MM-dd}", new { @class = "form-control EngDate" })
                    @Html.ValidationMessageFor(model => model.AssignedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-offset-2 col-sm-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>

        }
    </div>
        </div>
</section>

<script>
    $('#TransferDate').change(function () {
        $('#TransferDateBS').val(AD2BS($('#TransferDate').val()));
    });

    $('#TransferDateBS').nepaliDatePicker({
        ndpEnglishInput: 'TransferDate'
    });
     function GetItem()
    {
         var cat = $("#CategoryId").val();

        $.ajax({
                url: "@Url.Action("GetItemByCategoryTransfer", "Utility")",
            type: "post",
            data: { catid: cat},
            success: function (response, textStatus, jqXHR) {
                var $select = $("#AssetItemId");//district dropdown.
                $select.empty();
                $select.append(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                //alert("Something went wrong, Select Crew Type Again.");
            },
            complete: function () {
            }
        });
    }

    function GetOBL()
    {
         var asset = $("#AssetItemId").val();

        $.ajax({
            url: "@Url.Action("GetOBLbyItem", "Utility")",
            type: "post",
            data: { asseid: asset},
            success: function (response, textStatus, jqXHR) {
                var $select = $("#OrganizationId");//district dropdown.
                $select.empty();
                $select.append(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                //alert("Something went wrong, Select Crew Type Again.");
            },
            complete: function () {
            }
        });
        $.ajax({
            url: "@Url.Action("GetOBLbyItem1", "Utility")",
            type: "post",
            data: { asseid: asset},
            success: function (response, textStatus, jqXHR) {
                var $select = $("#BranchId");//district dropdown.
                $select.empty();
                $select.append(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                //alert("Something went wrong, Select Crew Type Again.");
            },
            complete: function () {
            }
        });
        $.ajax({
            url: "@Url.Action("GetOBLbyItem2", "Utility")",
            type: "post",
            data: { asseid: asset},
            success: function (response, textStatus, jqXHR) {
                var $select = $("#LocationId");//district dropdown.
                $select.empty();
                $select.append(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                //alert("Something went wrong, Select Crew Type Again.");
            },
            complete: function () {
            }
        });
    }

    function GetBranchLocation() {
        var orgID = $("#OrganizationId1").val();
        $.ajax({
            url: "@Url.Action("GetBranchByOrgID", "Utility")",
            type: "post",
            data: { orgaID: orgID },
            success: function (response, textStatus, jqXHR) {
                var $select = $("#BranchId1");//district dropdown.
                $select.empty();
                $select.append(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                //alert("Something went wrong, Select Crew Type Again.");
            },
            complete: function () {
            }
        });
        $.ajax({
            url: "@Url.Action("GetLocationByOrgID", "Utility")",
            type: "post",
            data: { orgaID: orgID },
            success: function (response, textStatus, jqXHR) {
                var $select = $("#LocationId1");//district dropdown.
                $select.empty();
                $select.append(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                //alert("Something went wrong, Select Crew Type Again.");
            },
            complete: function () {
            }
        });

        //disabled destination LocationID and BranchID
        var Linput = document.getElementById("LocationId1");
        var Binput = document.getElementById("BranchId1");
        Linput.disabled = false;
        Binput.disabled = false;

        

        $.ajax({
            url: "@Url.Action("GetUserByOrgID", "Utility")",
            type: "post",
            data: { orgaID: orgID },
            success: function (response, textStatus, jqXHR) {
                var $select = $("#AssignedToId");//district dropdown.
                $select.empty();
                $select.append(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                //alert("Something went wrong, Select Crew Type Again.");
            },
            complete: function () {
            }
        });
    }
    
</script>