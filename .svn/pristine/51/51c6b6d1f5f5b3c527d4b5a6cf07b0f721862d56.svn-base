@model United_IMS.Web.ViewModel.AssetVM

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>Asset Details</h1>
    <ol class="breadcrumb"><li class="list">@Html.ActionLink("List", "Index",null,new { @class = "btn btn-xs btn-success" })</li></ol>
</section>

<section class="content">
<div class="box box-success">
    <div class="box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Category", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.CategoryName, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Asset Name", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.AssetName, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Asset Code", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.AssetUniqueCode, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.BillDate, new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.BillDate, "{0:yyyy-MM-dd}", new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.BillDateBs, new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.BillDateBs, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.BillDateBs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.BillNo, new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.BillNo, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.BillNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.PurchaseValue, new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.PurchaseValue, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.PurchaseValue, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.OpeningValue, new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.OpeningValue, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.OpeningValue, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Branch", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Location", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control", disabled = "disabled" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Useful List", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UsefulLife, new { @class = "form-control", disabled = "disabled" }) Months
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Is Accessory", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @if (Model.IsAccessory == true)
                    {
                        <span class="label">Yes</span>
                        <span class="label">@Model.AccessoryForAssetName</span>
                    }
                    else
                    {
                        <span class="label">No</span>
                    }
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Depreciable?", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @if (Model.IsDepreciationApplicable == true)
                    {
                        <span class="label">Yes</span>
                        <span class="label">@Model.DepreciationName</span>
                        <span class="label">@(Model.DepreciationStartDate != null ? ((DateTime)Model.DepreciationStartDate).ToString("yyyy-MM-dd") : "")</span>
                    }
                    else
                    {
                        <span class="label">No</span>
                    }
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Sold?", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @if (Model.IsSold != null && Model.IsSold == true)
                    {
                        <span class="label">Yes</span>
                        <span class="label">@Model.SoldValue</span>
                        <span class="label">@(Model.SoldDate != null ? ((DateTime)Model.SoldDate).ToString("yyyy-MM-dd") : "")</span>
                    }
                    else
                    {
                        <span class="label">No</span>
                    }
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-2">
                    @Html.Label("Scrap?", new { @class = "control-label" })
                </div>
                <div class="col-sm-3">
                    @if (Model.IsScrap == true)
                    {
                        <span class="label">Yes</span>
                        <span class="label">@Model.ScrapRealizedValue</span>
                        <span class="label">@(Model.ScrapDate != null ? ((DateTime)Model.ScrapDate).ToString("yyyy-MM-dd") : "")</span>
                    }
                    else
                    {
                        <span class="label">No</span>
                    }
                </div>
            </div>


        }
    </div>
</div>
</section>
